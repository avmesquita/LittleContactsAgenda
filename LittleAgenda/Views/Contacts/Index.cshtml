@model IEnumerable<LittleAgenda.Entity.Contact>

@{
	ViewBag.Title = "Contact List";
	Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2><br />Little Contacts Agenda<br />&nbsp;</h2>

<p style="float:right;">
	@*
			@Html.ActionLink("Export ALL Contacts", "ExportExcel", "Contact", new { @class = "btn btn-large btn-info", title = "Export" })
		<br /><br />
		@Html.ActionLink("Create a New Contact", "Create", "Contact", new { @class = "btn btn-primary btn-large btn-success" })<br />
	*@
	<button type="button" class="btn btn-large btn-dark" data-toggle="modal" data-target="#insertNewContact" style="font-size:14px;">
		Create New Contact
	</button>

</p>

<div class="card-deck">
	@foreach (var item in Model)
	{
		@Html.HiddenFor(modelItem => item.ContactId);
	
		<div class="card" style="max-width:800px;">
			<div class="card-header" style="height:55px!important;">
				<h4 class="card-title">
					@if (item.FavoriteTag)
					{
						<span class="fa fa-star" alt="Favorite Contact"></span>
					}
					@Html.DisplayFor(modelItem => item.Name)
				</h4>
			</div>
			<div class="card-body">
				<p class="card-title font-weight-bold">@Html.DisplayNameFor(m => m.Observation)</p>
				<p class="card-text">@Html.DisplayFor(modelItem => item.Observation)</p>

				<p class="card-text">@Html.Partial("GetEmails", item.Emails)</p>
				<p class="card-text">@Html.Partial("GetTelephones", item.Telephones)</p>
				<p class="card-text">@Html.Partial("GetAddresses", item.Addresses)</p>
			</div>
			<div class="card-footer" style="height:55px!important;">
				<p class="card-text" style="float:left;">
					@Html.ActionLink(" ", "Delete", new { id = item.ContactId }, new { @class = "btn btn-large btn-danger fa fa-trash", title = "Delete" })
				</p>
				<p class="card-text" style="float:right;">
					@Html.ActionLink(" ", "Details", new { id = item.ContactId }, new { @class = "btn btn-primary btn-large fa fa-list-alt", title = "Details" })
				</p>
			</div>
		</div>
	
	}
</div>

@Html.Partial("InsertNewContact", new LittleAgenda.Entity.Contact() { ContactId = Guid.NewGuid().ToString() })
